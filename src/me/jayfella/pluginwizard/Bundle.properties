LBL_CreateProjectStep=Name and Location
OpenIDE-Module-Name=JMonkeyPluginWizard
JmonkeyPluginWizardPanelVisual.projectLocationLabel.text=Project &Location:
JmonkeyPluginWizardPanelVisual.browseButton.actionCommand=BROWSE
JmonkeyPluginWizardPanelVisual.browseButton.text=Br&owse...
JmonkeyPluginWizardPanelVisual.createdFolderLabel.text=Project &Folder:
JmonkeyPluginWizardPanelVisual.projectNameLabel.text=Project &Name:
PluginWizardPanelVisual.browseButton.actionCommand=BROWSE
PluginWizardPanelVisual.browseButton.text=Br&owse...
PluginWizardPanelVisual.suiteDescriptionLabel.text=<html>Select the directory in which to create a 'jme-plugins' module suite. If a 'jme-plugins' module suite already exists, select that directory instead.</html>
PluginWizardPanelVisual.pluginNameLabel.text=Plugin &Name:
PluginWizardPanelVisual.suiteLocationLabel.text=Suite &Location:
PluginWizardPanelVisual.pluginBasePackageLabel.text=Base Package:
PluginWizardPanelVisual.pluginBasePackageTextField.text=
PluginWizardPanelVisual.pluginBasePackageTextField.toolTipText=
PluginWizardPanelVisual.suiteFolderLabel.text=Suite &Folder:
PluginWizardPanelVisual.pluginFolderLabel.text=Plugin Folder:
PluginWizardPanelVisual.pluginFolderTextField.toolTipText=
PluginWizardPanelVisual.pluginFolderTextField.text=
PluginWizardPanelVisual.projectWrappingDescriptionLabel.text=<html>If you have already created a working project, you can 'wrap' the built .jar file into the plugin instead of moving all of your files into the new plugin.</html>
PluginWizardPanelVisual.wrapProjectCheckBox.text=Wrap an existing project
PluginWizardPanelVisual.browseWrappedProjectButton.text=Browse...
PluginWizardPanelVisual.wrappedProjectLocationTextField.text=
